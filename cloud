5. installationa of compiler = sudo apt-get install gcc , sudo apt-get install build-essential
fibonacci.c
#include<stdio.h>
int main()
{
int n1=0,n2=1,n3,i,number;
printf("Enter the number of elements:");
scanf("%d",&number);
printf("\n%d %d",n1,n2);
for(i=2;i<number;++i)
{
n3=n1+n2;
printf(" %d",n3);
n1=n2;
n2=n3;
}
return 0;
}
fact.c
#include <stdio.h>
unsigned int factorial(unsigned int N) {
int fact = 1, i;
for (i = 1; i <= N; i++) {
fact *= i;
}
return fact;
}int main() {
int N = 5;
int fact = factorial(N);
printf("Factorial of %d is %d", N, fact);
return 0;
}
palindrome.c
#include <stdio.h>
#include <string.h>
#include <ctype.h>
int isPalindrome(char str[]) {
    int len = strlen(str);
    for (int i = 0; i < len / 2; i++) {
        if (str[i] != str[len - i - 1])
            return 0;
    }
    return 1;
}
int main() {
    char input[100];
    printf("Enter a number or string: ");
    scanf("%s", input);
    for (int i = 0; input[i]; i++) {
        input[i] = tolower(input[i]);
    }
    if (isPalindrome(input))
        printf("Palindrome\n");
    else
        printf("Not a palindrome\n");
    return 0;
}
sort.c
#include <stdio.h>
void main (){
int num[20];
int i, j, a, n;
printf("enter number of elements in an array");
scanf("%d", &n);
printf("Enter the elements");
for (i = 0; i < n; ++i)
scanf("%d", &num[i]);
for (i = 0; i < n; ++i){
for (j = i + 1; j < n; ++j){
if (num[i] < num[j]){
a = num[i];
num[i] = num[j];
num[j] = a;
}
}
}
printf("The numbers in descending order is:");
for (i = 0; i < n; ++i){
printf("%d", num[i]);
}
}
matrix.c
#include <stdio.h>
int main() {
int firstMatrix[2][2], secondMatrix[2][2], result[2][2];
printf("Enter elements of the first 2x2 matrix:\n");
for (int i = 0; i < 2; i++) {
for (int j = 0; j < 2; j++) {
scanf("%d", &firstMatrix[i][j]);
}
}
printf("Enter elements of the second 2x2 matrix:\n");
for (int i = 0; i < 2; i++) {
for (int j = 0; j < 2; j++) {
scanf("%d", &secondMatrix[i][j]);
}}
for (int i = 0; i < 2; i++) {
for (int j = 0; j < 2; j++) {
result[i][j] = 0;
for (int k = 0; k < 2; k++) {
result[i][j] += firstMatrix[i][k] * secondMatrix[k][j];
}
}
}
printf("Resultant Matrix:\n");
for (int i = 0; i < 2; i++) {
for (int j = 0; j < 2; j++) {
printf("%d ", result[i][j]);
}
printf("\n");
}
return 0;
}
==============================================================================
8. Writing docker file for simple application development
$ mkdir dockerfilesample, $ cd dockerfilesample
Dockerfile:
FROM nginx
COPY index.html /usr/share/nginx/html
index.html
<html>
<head>
<title>DockerSample</title>
</head>
<body>
<h1>Hello, World!</h1>
</body>
</html>
docker build -t dockerfilesample .   , docker run -p 8080:80 dockerfilesample
=======================================================================================
docker build -t myapp:v1 .   ,   docker images  
docker tag image srimi/docker-demo:v1   , docker push srimi31/docker-demo  , ocker pull srimi31/docker-demo:v1
=======================================================================================
10. running multiple docker container
html-cluster/
├── docker-compose.yml
├── index.html
└── nginx.conf
index.html
<!DOCTYPE html>
<html>
<head>
<title>My Page</title>
</head>
<body>
<h1>Welcome to My Page!</h1>
<p>This is a simple HTML page designed in 15 lines.</p>
<button onclick="alert('Hello, Welcome!')">Click Me</button>
</body>
</html>
nginx.conf
server {
listen 80;
server_name localhost;
location / {
root /usr/share/nginx/html;
index index.html;
}
}
docker-compose.yml
version: '3.9'

services:
  web-node-1:
    image: nginx:latest
    container_name: web-node-1
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8081:80"
    networks:
      - html-cluster

  web-node-2:
    image: nginx:latest
    container_name: web-node-2
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8082:80"
    networks:
      - html-cluster

  web-node-3:
    image: nginx:latest
    container_name: web-node-3
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8083:80"
    networks:
      - html-cluster

networks:
  html-cluster:
    driver: bridge
run: docker-compose up -d
=======================================================================================
11. docker swarm
docker swarm init --default-addr-pool 10.20.0.0/16
docker service create --name webapp --replicas 3 -p 8080:80 nginx
docker service scale webapp=5
docker service update --image nginx:1.19.8 webapp
docker service ls --filter name=webapp
docker ps -a
docker swarm leave –force
docker system prune -a --volumes
=======================================================================================
12. kubernetes
 C:\Program Files\Docker\Docker\Resources \bin>$ kubectl config get-contexts,  $ kubectl config use-context docker-desktop
=======================================================================================
13.minikube:
 C:\Program Files\Docker\Docker\Resources \bin\Minikube>minikube start
Kubectl cluster-info ,  kubectl create deployment nginx-deployment --image=nginx,   kubectl get pods 
kubectl expose deployment nginx-deployment --port=80 --type=NodePort  , minikube service nginx-deployment --url
=======================================================================================
